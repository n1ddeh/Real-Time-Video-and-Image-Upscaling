from model.srgan import generator
from model.wdsr import wdsr_b
from model import resolve_single
import utils
import cv2
import numpy as np
import tensorflow as tf
print("Num GPUs Available: ", len(tf.config.experimental.list_physical_devices('GPU')))

# SRGAN
srgan_model = generator()
srgan_model.load_weights('weights/srgan/gan_generator.h5')

cap = cv2.VideoCapture(0)
ret, frame = cap.read()
scale = 30

while(True):
    width = int(frame.shape[1] * (scale/100))
    height = int(frame.shape[0] * (scale/100))
    dim = (width, height)
    # Capture frame-by-frame
    ret, frame = cap.read()
    crop = cv2.resize(frame, dim, interpolation = cv2.INTER_AREA)
    upscale = resolve_single(srgan_model, crop).numpy()
    
    width = int(frame.shape[1])
    height = int(frame.shape[0])
    dim = (width, height)
    crop = cv2.resize(crop, dim, interpolation = cv2.INTER_AREA)
    upscale = cv2.resize(upscale, dim, interpolation = cv2.INTER_AREA)
    
    # Display the resulting frame
    cv2.imshow('input', frame)
    cv2.imshow('cropped', crop)
    cv2.imshow('srgan', upscale)
    
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# When everything done, release the capture
cap.release()
cv2.destroyAllWindows()

def